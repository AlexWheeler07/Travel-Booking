{"ast":null,"code":"// API service for making HTTP requests\nimport axios from \"axios\";\n\n// Create axios instance with base URL\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\n\n// Add token to requests if it exists\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  }\n  return req;\n});\n\n// Auth API calls\nexport const register = userData => API.post(\"/auth/register\", userData);\nexport const login = userData => API.post(\"/auth/login\", userData);\nexport const getProfile = () => API.get(\"/auth/profile\");\n\n// Trip API calls\nexport const getTrips = () => API.get(\"/trips\");\nexport const getTrip = id => API.get(`/trips/${id}`);\nexport const createTrip = tripData => API.post(\"/trips\", tripData);\nexport const updateTrip = (id, tripData) => API.put(`/trips/${id}`, tripData);\nexport const deleteTrip = id => API.delete(`/trips/${id}`);\nexport const bookTrip = id => API.post(`/trips/${id}/book`);\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","register","userData","post","login","getProfile","get","getTrips","getTrip","id","createTrip","tripData","updateTrip","put","deleteTrip","delete","bookTrip"],"sources":["C:/Users/alexw/Desktop/travel-booking-app/frontend/src/services/api.js"],"sourcesContent":["// API service for making HTTP requests\r\nimport axios from \"axios\";\r\n\r\n// Create axios instance with base URL\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n});\r\n\r\n// Add token to requests if it exists\r\nAPI.interceptors.request.use((req) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\n// Auth API calls\r\nexport const register = (userData) => API.post(\"/auth/register\", userData);\r\nexport const login = (userData) => API.post(\"/auth/login\", userData);\r\nexport const getProfile = () => API.get(\"/auth/profile\");\r\n\r\n// Trip API calls\r\nexport const getTrips = () => API.get(\"/trips\");\r\nexport const getTrip = (id) => API.get(`/trips/${id}`);\r\nexport const createTrip = (tripData) => API.post(\"/trips\", tripData);\r\nexport const updateTrip = (id, tripData) => API.put(`/trips/${id}`, tripData);\r\nexport const deleteTrip = (id) => API.delete(`/trips/${id}`);\r\nexport const bookTrip = (id) => API.post(`/trips/${id}/book`);\r\n\r\nexport default API;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC/C;EACA,OAAOD,GAAG;AACZ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,QAAQ,GAAIC,QAAQ,IAAKb,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AAC1E,OAAO,MAAME,KAAK,GAAIF,QAAQ,IAAKb,GAAG,CAACc,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAMhB,GAAG,CAACiB,GAAG,CAAC,eAAe,CAAC;;AAExD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMlB,GAAG,CAACiB,GAAG,CAAC,QAAQ,CAAC;AAC/C,OAAO,MAAME,OAAO,GAAIC,EAAE,IAAKpB,GAAG,CAACiB,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;AACtD,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAKtB,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAEQ,QAAQ,CAAC;AACpE,OAAO,MAAMC,UAAU,GAAGA,CAACH,EAAE,EAAEE,QAAQ,KAAKtB,GAAG,CAACwB,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEE,QAAQ,CAAC;AAC7E,OAAO,MAAMG,UAAU,GAAIL,EAAE,IAAKpB,GAAG,CAAC0B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;AAC5D,OAAO,MAAMO,QAAQ,GAAIP,EAAE,IAAKpB,GAAG,CAACc,IAAI,CAAC,UAAUM,EAAE,OAAO,CAAC;AAE7D,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}